[{"name":"abstract fun shouldRetry(result: Result<Any?>, retryCount: Int): Boolean","description":"io.circul.catalyst.predicate.RetryPredicate.shouldRetry","location":"-catalyst/io.circul.catalyst.predicate/-retry-predicate/should-retry.html","searchKeys":["shouldRetry","abstract fun shouldRetry(result: Result<Any?>, retryCount: Int): Boolean","io.circul.catalyst.predicate.RetryPredicate.shouldRetry"]},{"name":"abstract operator fun get(index: Int): Duration","description":"io.circul.catalyst.delay.DelayStrategy.get","location":"-catalyst/io.circul.catalyst.delay/-delay-strategy/get.html","searchKeys":["get","abstract operator fun get(index: Int): Duration","io.circul.catalyst.delay.DelayStrategy.get"]},{"name":"constructor(retryPredicate: RetryPredicate = onException, delayStrategy: DelayStrategy = noDelay)","description":"io.circul.catalyst.RetryPolicy.RetryPolicy","location":"-catalyst/io.circul.catalyst/-retry-policy/-retry-policy.html","searchKeys":["RetryPolicy","constructor(retryPredicate: RetryPredicate = onException, delayStrategy: DelayStrategy = noDelay)","io.circul.catalyst.RetryPolicy.RetryPolicy"]},{"name":"fun attempts(n: Int): RetryPredicate","description":"io.circul.catalyst.predicate.attempts","location":"-catalyst/io.circul.catalyst.predicate/attempts.html","searchKeys":["attempts","fun attempts(n: Int): RetryPredicate","io.circul.catalyst.predicate.attempts"]},{"name":"fun constantDelay(delay: Duration): DelayStrategy","description":"io.circul.catalyst.delay.constantDelay","location":"-catalyst/io.circul.catalyst.delay/constant-delay.html","searchKeys":["constantDelay","fun constantDelay(delay: Duration): DelayStrategy","io.circul.catalyst.delay.constantDelay"]},{"name":"fun constantDelay(delayMillis: Long): DelayStrategy","description":"io.circul.catalyst.delay.constantDelay","location":"-catalyst/io.circul.catalyst.delay/constant-delay.html","searchKeys":["constantDelay","fun constantDelay(delayMillis: Long): DelayStrategy","io.circul.catalyst.delay.constantDelay"]},{"name":"fun customDelay(delayFunction: DelayFunction): DelayStrategy","description":"io.circul.catalyst.delay.customDelay","location":"-catalyst/io.circul.catalyst.delay/custom-delay.html","searchKeys":["customDelay","fun customDelay(delayFunction: DelayFunction): DelayStrategy","io.circul.catalyst.delay.customDelay"]},{"name":"fun exponentialBackoffDelay(initialDelay: Duration, factor: Double): DelayStrategy","description":"io.circul.catalyst.delay.exponentialBackoffDelay","location":"-catalyst/io.circul.catalyst.delay/exponential-backoff-delay.html","searchKeys":["exponentialBackoffDelay","fun exponentialBackoffDelay(initialDelay: Duration, factor: Double): DelayStrategy","io.circul.catalyst.delay.exponentialBackoffDelay"]},{"name":"fun fibonacciBackoffDelay(baseDelay: Duration, start: Pair<Int, Int> = 0 to 1): DelayStrategy","description":"io.circul.catalyst.delay.fibonacciBackoffDelay","location":"-catalyst/io.circul.catalyst.delay/fibonacci-backoff-delay.html","searchKeys":["fibonacciBackoffDelay","fun fibonacciBackoffDelay(baseDelay: Duration, start: Pair<Int, Int> = 0 to 1): DelayStrategy","io.circul.catalyst.delay.fibonacciBackoffDelay"]},{"name":"fun linearBackoffDelay(initialDelay: Duration, increment: Duration): DelayStrategy","description":"io.circul.catalyst.delay.linearBackoffDelay","location":"-catalyst/io.circul.catalyst.delay/linear-backoff-delay.html","searchKeys":["linearBackoffDelay","fun linearBackoffDelay(initialDelay: Duration, increment: Duration): DelayStrategy","io.circul.catalyst.delay.linearBackoffDelay"]},{"name":"fun maxOf(first: DelayStrategy, vararg others: DelayStrategy): DelayStrategy","description":"io.circul.catalyst.delay.maxOf","location":"-catalyst/io.circul.catalyst.delay/max-of.html","searchKeys":["maxOf","fun maxOf(first: DelayStrategy, vararg others: DelayStrategy): DelayStrategy","io.circul.catalyst.delay.maxOf"]},{"name":"fun minOf(first: DelayStrategy, vararg others: DelayStrategy): DelayStrategy","description":"io.circul.catalyst.delay.minOf","location":"-catalyst/io.circul.catalyst.delay/min-of.html","searchKeys":["minOf","fun minOf(first: DelayStrategy, vararg others: DelayStrategy): DelayStrategy","io.circul.catalyst.delay.minOf"]},{"name":"fun sequentialDelay(delays: List<Duration>): DelayStrategy","description":"io.circul.catalyst.delay.sequentialDelay","location":"-catalyst/io.circul.catalyst.delay/sequential-delay.html","searchKeys":["sequentialDelay","fun sequentialDelay(delays: List<Duration>): DelayStrategy","io.circul.catalyst.delay.sequentialDelay"]},{"name":"fun sequentialDelay(vararg delayMillis: Long): DelayStrategy","description":"io.circul.catalyst.delay.sequentialDelay","location":"-catalyst/io.circul.catalyst.delay/sequential-delay.html","searchKeys":["sequentialDelay","fun sequentialDelay(vararg delayMillis: Long): DelayStrategy","io.circul.catalyst.delay.sequentialDelay"]},{"name":"fun timeLimit(duration: Duration, clock: TimeSource = TimeSource.Monotonic): RetryPredicate","description":"io.circul.catalyst.predicate.timeLimit","location":"-catalyst/io.circul.catalyst.predicate/time-limit.html","searchKeys":["timeLimit","fun timeLimit(duration: Duration, clock: TimeSource = TimeSource.Monotonic): RetryPredicate","io.circul.catalyst.predicate.timeLimit"]},{"name":"infix fun DelayStrategy.with(that: RetryPredicate): RetryPolicy","description":"io.circul.catalyst.with","location":"-catalyst/io.circul.catalyst/with.html","searchKeys":["with","infix fun DelayStrategy.with(that: RetryPredicate): RetryPolicy","io.circul.catalyst.with"]},{"name":"infix fun Duration.delayWithIncrementsOf(that: Duration): DelayStrategy","description":"io.circul.catalyst.delay.delayWithIncrementsOf","location":"-catalyst/io.circul.catalyst.delay/delay-with-increments-of.html","searchKeys":["delayWithIncrementsOf","infix fun Duration.delayWithIncrementsOf(that: Duration): DelayStrategy","io.circul.catalyst.delay.delayWithIncrementsOf"]},{"name":"infix fun Duration.delayWithScaleFactorOf(that: Double): DelayStrategy","description":"io.circul.catalyst.delay.delayWithScaleFactorOf","location":"-catalyst/io.circul.catalyst.delay/delay-with-scale-factor-of.html","searchKeys":["delayWithScaleFactorOf","infix fun Duration.delayWithScaleFactorOf(that: Double): DelayStrategy","io.circul.catalyst.delay.delayWithScaleFactorOf"]},{"name":"infix fun RetryPredicate.with(that: DelayStrategy): RetryPolicy","description":"io.circul.catalyst.with","location":"-catalyst/io.circul.catalyst/with.html","searchKeys":["with","infix fun RetryPredicate.with(that: DelayStrategy): RetryPolicy","io.circul.catalyst.with"]},{"name":"inline fun <T> onResultType(): RetryPredicate","description":"io.circul.catalyst.predicate.onResultType","location":"-catalyst/io.circul.catalyst.predicate/on-result-type.html","searchKeys":["onResultType","inline fun <T> onResultType(): RetryPredicate","io.circul.catalyst.predicate.onResultType"]},{"name":"inline fun <T> untilResultType(): RetryPredicate","description":"io.circul.catalyst.predicate.untilResultType","location":"-catalyst/io.circul.catalyst.predicate/until-result-type.html","searchKeys":["untilResultType","inline fun <T> untilResultType(): RetryPredicate","io.circul.catalyst.predicate.untilResultType"]},{"name":"inline fun on(crossinline predicate: PredicateFunction): RetryPredicate","description":"io.circul.catalyst.predicate.on","location":"-catalyst/io.circul.catalyst.predicate/on.html","searchKeys":["on","inline fun on(crossinline predicate: PredicateFunction): RetryPredicate","io.circul.catalyst.predicate.on"]},{"name":"inline fun until(crossinline predicate: PredicateFunction): RetryPredicate","description":"io.circul.catalyst.predicate.until","location":"-catalyst/io.circul.catalyst.predicate/until.html","searchKeys":["until","inline fun until(crossinline predicate: PredicateFunction): RetryPredicate","io.circul.catalyst.predicate.until"]},{"name":"interface DelayStrategy","description":"io.circul.catalyst.delay.DelayStrategy","location":"-catalyst/io.circul.catalyst.delay/-delay-strategy/index.html","searchKeys":["DelayStrategy","interface DelayStrategy","io.circul.catalyst.delay.DelayStrategy"]},{"name":"interface RetryPredicate","description":"io.circul.catalyst.predicate.RetryPredicate","location":"-catalyst/io.circul.catalyst.predicate/-retry-predicate/index.html","searchKeys":["RetryPredicate","interface RetryPredicate","io.circul.catalyst.predicate.RetryPredicate"]},{"name":"open class RetryPolicy(retryPredicate: RetryPredicate = onException, delayStrategy: DelayStrategy = noDelay)","description":"io.circul.catalyst.RetryPolicy","location":"-catalyst/io.circul.catalyst/-retry-policy/index.html","searchKeys":["RetryPolicy","open class RetryPolicy(retryPredicate: RetryPredicate = onException, delayStrategy: DelayStrategy = noDelay)","io.circul.catalyst.RetryPolicy"]},{"name":"open fun coerceAtLeast(minimumValue: Duration): DelayStrategy","description":"io.circul.catalyst.delay.DelayStrategy.coerceAtLeast","location":"-catalyst/io.circul.catalyst.delay/-delay-strategy/coerce-at-least.html","searchKeys":["coerceAtLeast","open fun coerceAtLeast(minimumValue: Duration): DelayStrategy","io.circul.catalyst.delay.DelayStrategy.coerceAtLeast"]},{"name":"open fun coerceAtMost(maximumValue: Duration): DelayStrategy","description":"io.circul.catalyst.delay.DelayStrategy.coerceAtMost","location":"-catalyst/io.circul.catalyst.delay/-delay-strategy/coerce-at-most.html","searchKeys":["coerceAtMost","open fun coerceAtMost(maximumValue: Duration): DelayStrategy","io.circul.catalyst.delay.DelayStrategy.coerceAtMost"]},{"name":"open fun coerceIn(minimumValue: Duration, maximumValue: Duration): DelayStrategy","description":"io.circul.catalyst.delay.DelayStrategy.coerceIn","location":"-catalyst/io.circul.catalyst.delay/-delay-strategy/coerce-in.html","searchKeys":["coerceIn","open fun coerceIn(minimumValue: Duration, maximumValue: Duration): DelayStrategy","io.circul.catalyst.delay.DelayStrategy.coerceIn"]},{"name":"open fun coerceIn(range: ClosedRange<Duration>): DelayStrategy","description":"io.circul.catalyst.delay.DelayStrategy.coerceIn","location":"-catalyst/io.circul.catalyst.delay/-delay-strategy/coerce-in.html","searchKeys":["coerceIn","open fun coerceIn(range: ClosedRange<Duration>): DelayStrategy","io.circul.catalyst.delay.DelayStrategy.coerceIn"]},{"name":"open fun withJitter(jitterFactor: Double, random: Random = Random.Default): DelayStrategy","description":"io.circul.catalyst.delay.DelayStrategy.withJitter","location":"-catalyst/io.circul.catalyst.delay/-delay-strategy/with-jitter.html","searchKeys":["withJitter","open fun withJitter(jitterFactor: Double, random: Random = Random.Default): DelayStrategy","io.circul.catalyst.delay.DelayStrategy.withJitter"]},{"name":"open infix fun and(other: RetryPredicate): RetryPredicate","description":"io.circul.catalyst.predicate.RetryPredicate.and","location":"-catalyst/io.circul.catalyst.predicate/-retry-predicate/and.html","searchKeys":["and","open infix fun and(other: RetryPredicate): RetryPredicate","io.circul.catalyst.predicate.RetryPredicate.and"]},{"name":"open infix fun nand(other: RetryPredicate): RetryPredicate","description":"io.circul.catalyst.predicate.RetryPredicate.nand","location":"-catalyst/io.circul.catalyst.predicate/-retry-predicate/nand.html","searchKeys":["nand","open infix fun nand(other: RetryPredicate): RetryPredicate","io.circul.catalyst.predicate.RetryPredicate.nand"]},{"name":"open infix fun nor(other: RetryPredicate): RetryPredicate","description":"io.circul.catalyst.predicate.RetryPredicate.nor","location":"-catalyst/io.circul.catalyst.predicate/-retry-predicate/nor.html","searchKeys":["nor","open infix fun nor(other: RetryPredicate): RetryPredicate","io.circul.catalyst.predicate.RetryPredicate.nor"]},{"name":"open infix fun or(other: RetryPredicate): RetryPredicate","description":"io.circul.catalyst.predicate.RetryPredicate.or","location":"-catalyst/io.circul.catalyst.predicate/-retry-predicate/or.html","searchKeys":["or","open infix fun or(other: RetryPredicate): RetryPredicate","io.circul.catalyst.predicate.RetryPredicate.or"]},{"name":"open infix fun xnor(other: RetryPredicate): RetryPredicate","description":"io.circul.catalyst.predicate.RetryPredicate.xnor","location":"-catalyst/io.circul.catalyst.predicate/-retry-predicate/xnor.html","searchKeys":["xnor","open infix fun xnor(other: RetryPredicate): RetryPredicate","io.circul.catalyst.predicate.RetryPredicate.xnor"]},{"name":"open infix fun xor(other: RetryPredicate): RetryPredicate","description":"io.circul.catalyst.predicate.RetryPredicate.xor","location":"-catalyst/io.circul.catalyst.predicate/-retry-predicate/xor.html","searchKeys":["xor","open infix fun xor(other: RetryPredicate): RetryPredicate","io.circul.catalyst.predicate.RetryPredicate.xor"]},{"name":"open operator fun div(divisor: Double): DelayStrategy","description":"io.circul.catalyst.delay.DelayStrategy.div","location":"-catalyst/io.circul.catalyst.delay/-delay-strategy/div.html","searchKeys":["div","open operator fun div(divisor: Double): DelayStrategy","io.circul.catalyst.delay.DelayStrategy.div"]},{"name":"open operator fun div(divisor: Int): DelayStrategy","description":"io.circul.catalyst.delay.DelayStrategy.div","location":"-catalyst/io.circul.catalyst.delay/-delay-strategy/div.html","searchKeys":["div","open operator fun div(divisor: Int): DelayStrategy","io.circul.catalyst.delay.DelayStrategy.div"]},{"name":"open operator fun minus(other: DelayStrategy): DelayStrategy","description":"io.circul.catalyst.delay.DelayStrategy.minus","location":"-catalyst/io.circul.catalyst.delay/-delay-strategy/minus.html","searchKeys":["minus","open operator fun minus(other: DelayStrategy): DelayStrategy","io.circul.catalyst.delay.DelayStrategy.minus"]},{"name":"open operator fun not(): RetryPredicate","description":"io.circul.catalyst.predicate.RetryPredicate.not","location":"-catalyst/io.circul.catalyst.predicate/-retry-predicate/not.html","searchKeys":["not","open operator fun not(): RetryPredicate","io.circul.catalyst.predicate.RetryPredicate.not"]},{"name":"open operator fun plus(other: DelayStrategy): DelayStrategy","description":"io.circul.catalyst.delay.DelayStrategy.plus","location":"-catalyst/io.circul.catalyst.delay/-delay-strategy/plus.html","searchKeys":["plus","open operator fun plus(other: DelayStrategy): DelayStrategy","io.circul.catalyst.delay.DelayStrategy.plus"]},{"name":"open operator fun times(factor: Double): DelayStrategy","description":"io.circul.catalyst.delay.DelayStrategy.times","location":"-catalyst/io.circul.catalyst.delay/-delay-strategy/times.html","searchKeys":["times","open operator fun times(factor: Double): DelayStrategy","io.circul.catalyst.delay.DelayStrategy.times"]},{"name":"open operator fun times(factor: Int): DelayStrategy","description":"io.circul.catalyst.delay.DelayStrategy.times","location":"-catalyst/io.circul.catalyst.delay/-delay-strategy/times.html","searchKeys":["times","open operator fun times(factor: Int): DelayStrategy","io.circul.catalyst.delay.DelayStrategy.times"]},{"name":"open operator fun unaryMinus(): DelayStrategy","description":"io.circul.catalyst.delay.DelayStrategy.unaryMinus","location":"-catalyst/io.circul.catalyst.delay/-delay-strategy/unary-minus.html","searchKeys":["unaryMinus","open operator fun unaryMinus(): DelayStrategy","io.circul.catalyst.delay.DelayStrategy.unaryMinus"]},{"name":"open operator fun unaryPlus(): DelayStrategy","description":"io.circul.catalyst.delay.DelayStrategy.unaryPlus","location":"-catalyst/io.circul.catalyst.delay/-delay-strategy/unary-plus.html","searchKeys":["unaryPlus","open operator fun unaryPlus(): DelayStrategy","io.circul.catalyst.delay.DelayStrategy.unaryPlus"]},{"name":"operator fun Double.times(delayStrategy: DelayStrategy): DelayStrategy","description":"io.circul.catalyst.delay.times","location":"-catalyst/io.circul.catalyst.delay/times.html","searchKeys":["times","operator fun Double.times(delayStrategy: DelayStrategy): DelayStrategy","io.circul.catalyst.delay.times"]},{"name":"operator fun Int.times(delayStrategy: DelayStrategy): DelayStrategy","description":"io.circul.catalyst.delay.times","location":"-catalyst/io.circul.catalyst.delay/times.html","searchKeys":["times","operator fun Int.times(delayStrategy: DelayStrategy): DelayStrategy","io.circul.catalyst.delay.times"]},{"name":"suspend fun <T> retry(block: RetryBlock<T>): T","description":"io.circul.catalyst.RetryPolicy.retry","location":"-catalyst/io.circul.catalyst/-retry-policy/retry.html","searchKeys":["retry","suspend fun <T> retry(block: RetryBlock<T>): T","io.circul.catalyst.RetryPolicy.retry"]},{"name":"val DelayFunction.customDelay: DelayStrategy","description":"io.circul.catalyst.delay.customDelay","location":"-catalyst/io.circul.catalyst.delay/custom-delay.html","searchKeys":["customDelay","val DelayFunction.customDelay: DelayStrategy","io.circul.catalyst.delay.customDelay"]},{"name":"val DelayStrategy.asRetryPolicy: RetryPolicy","description":"io.circul.catalyst.asRetryPolicy","location":"-catalyst/io.circul.catalyst/as-retry-policy.html","searchKeys":["asRetryPolicy","val DelayStrategy.asRetryPolicy: RetryPolicy","io.circul.catalyst.asRetryPolicy"]},{"name":"val Duration.constantDelay: DelayStrategy","description":"io.circul.catalyst.delay.constantDelay","location":"-catalyst/io.circul.catalyst.delay/constant-delay.html","searchKeys":["constantDelay","val Duration.constantDelay: DelayStrategy","io.circul.catalyst.delay.constantDelay"]},{"name":"val Duration.fibonacciBackoffDelay: DelayStrategy","description":"io.circul.catalyst.delay.fibonacciBackoffDelay","location":"-catalyst/io.circul.catalyst.delay/fibonacci-backoff-delay.html","searchKeys":["fibonacciBackoffDelay","val Duration.fibonacciBackoffDelay: DelayStrategy","io.circul.catalyst.delay.fibonacciBackoffDelay"]},{"name":"val Duration.timeLimit: RetryPredicate","description":"io.circul.catalyst.predicate.timeLimit","location":"-catalyst/io.circul.catalyst.predicate/time-limit.html","searchKeys":["timeLimit","val Duration.timeLimit: RetryPredicate","io.circul.catalyst.predicate.timeLimit"]},{"name":"val Int.attempts: RetryPredicate","description":"io.circul.catalyst.predicate.attempts","location":"-catalyst/io.circul.catalyst.predicate/attempts.html","searchKeys":["attempts","val Int.attempts: RetryPredicate","io.circul.catalyst.predicate.attempts"]},{"name":"val List<Duration>.sequentialDelay: DelayStrategy","description":"io.circul.catalyst.delay.sequentialDelay","location":"-catalyst/io.circul.catalyst.delay/sequential-delay.html","searchKeys":["sequentialDelay","val List<Duration>.sequentialDelay: DelayStrategy","io.circul.catalyst.delay.sequentialDelay"]},{"name":"val RetryPredicate.asRetryPolicy: RetryPolicy","description":"io.circul.catalyst.asRetryPolicy","location":"-catalyst/io.circul.catalyst/as-retry-policy.html","searchKeys":["asRetryPolicy","val RetryPredicate.asRetryPolicy: RetryPolicy","io.circul.catalyst.asRetryPolicy"]},{"name":"val noDelay: DelayStrategy","description":"io.circul.catalyst.delay.noDelay","location":"-catalyst/io.circul.catalyst.delay/no-delay.html","searchKeys":["noDelay","val noDelay: DelayStrategy","io.circul.catalyst.delay.noDelay"]},{"name":"val onException: RetryPredicate","description":"io.circul.catalyst.predicate.onException","location":"-catalyst/io.circul.catalyst.predicate/on-exception.html","searchKeys":["onException","val onException: RetryPredicate","io.circul.catalyst.predicate.onException"]},{"name":"val onNull: RetryPredicate","description":"io.circul.catalyst.predicate.onNull","location":"-catalyst/io.circul.catalyst.predicate/on-null.html","searchKeys":["onNull","val onNull: RetryPredicate","io.circul.catalyst.predicate.onNull"]},{"name":"val untilResult: RetryPredicate","description":"io.circul.catalyst.predicate.untilResult","location":"-catalyst/io.circul.catalyst.predicate/until-result.html","searchKeys":["untilResult","val untilResult: RetryPredicate","io.circul.catalyst.predicate.untilResult"]}]
